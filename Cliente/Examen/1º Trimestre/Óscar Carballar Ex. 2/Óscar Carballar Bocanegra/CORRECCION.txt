
			FORMULARIOS:


1. Crear una página web que contenga un formulario con los siguientes campos, características y funcionalidades. 
	Se deberán poner las correspondientes etiquetas junto a cada campo:

NOMBRE y APELLIDOS: 
	Son dos campos. No podrán estar vacíos y siempre se escribirá en mayúsculas y sólo podrá contener letras y espacios en blanco, 
	se podrá permitirá el uso de supr y backspace. (0,5 puntos)

	Permite escribir en minúsculas. 

	NOTA: 0



NIF:
	Su longitud será 9. Sólo se podrán contener número en las 8 primeras posiciones y una y sólo una letra mayúscula 
	en la última posición. Se asegurará que el usuario ha escrito la letra de forma correcta 
	y se indicará de alguna forma si no ha sido así. (0,5 puntos)



	NOTA: 1



USUARIO:
	Deberá tener una longitud mínima de 5 caracteres y máxima de 20. 
	Deberá contener al menos un número y una letra. (0,5 puntos)



	NOTA: 0,5



CLAVE: (el ejercicio es CLAVE Y REPETIR CLAVE)
	Deberá contener una longitud mínima de 8 caracteres, al menos una letra en minúscula y otra en mayúscula, 
	un número y uno de los siguientes caracteres: * _ @ & $ % ? #  
REPETIR CLAVE:
Deberá ser idéntica al contenido de CLAVE, además de cumplir con las mismas restricciones. (1,5 puntos)



	NOTA: 1,5




FECHA DE NACIMIENTO:
	Sólo serán válidas aquellas fechas CORRECTAS y además, sean 18 años anteriores a la fecha actual, 
	es decir, nos aseguraremos que el usuario, suponiendo que ha puesto su fecha real de nacimiento, 
	sea mayor de edad. (1 punto)

	Permite enviar con la fecha: 29/02/1999 que es incorrecta.

	NOTA: 0



2. Desarrollar una función javascript que valide un DNI/NIF de la siguiente forma (1 punto):
    • Nombre de la función: ValidarNIF_V2
    • Recibe un parámetro con un DNI/NIF el cual tendrá la letra en la última posición, Y PUEDE VENIR SEPARADA POR UN GUIÓN (O NO).
    • Como resultado, devolverá UN OBJETO javascript con las siguientes propiedades:

	PERFECTO!!!!


	NOTA: 1







Dados los ficheros servicio_coordenadas.php y Examen_coordenadas_SIN.html, suministrados por el profesor. 
Añadir código javascript necesario para conseguir, haciendo uso servicio_coordenadas.php, las siguientes funcionalidades:

Se trata de mostrar al usuario un par de coordenadas, la primera es un número y la segunda es una letra mayúscula. 
Con esas coordenadas, el usuario buscará el número asociado según su tarjeta de coordenadas. 
Introducirá dicho número (en el único input text de la página) y cuando haga click en el botón ACEPTAR, 
se mostrará un mensaje indicando si el número/valor introducido es o no correcto. 
IMPORTANTE: El tiempo de respuesta del servidor es INDETERMINADO.


3. Sabiendo que las dimensiones del array “asociativo” de servicio_coordenadas.php es de 0 a 9 (ambos inclusive) para las filas, 
	y de A a F (ambas inclusive) para las columnas. Mostrar al usuario, 
	al cargarse la página, unas coordenadas según dichos rangos, DE FORMA ALEATORIA. 
	Esto es, cada vez que se carge la página se calculará una fila y una columna de forma aletoria, 
	y se le mostrará al usuario. (1 punto)




	NOTA: 





4. Cando el usuario haga click en el botón ACEPTAR, entonces y SOLO ENTONCES. 
	Se hará uso del servicio correspondiente del fichero servicio_coordenadas.php para, 
	MEDIANTE PETICIÓN AJAX, comprobar si el número/valor introducido por el usuario es o no correcto, 
	y hacerselo saber al usuario. (2 puntos).




	NOTA: 2





5. Para el ejercicio 3. En vez de utilizar un rango fijo de filas y de columnas, 
	pensando que estás (las filas y las columnas) del array “asociativo” 
	pueden cambiar (el array puede crecer), hacer uso de los servicios correspondientes para obtener dicho rango, 
	MEDIANTE PETICIONES AJAX (también al cargarse la página). (3 puntos)




	NOTA: 3



	NOTA FINAL: 9






